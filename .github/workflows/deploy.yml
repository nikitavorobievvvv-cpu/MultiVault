name: Deploy MultiVault

on:
  workflow_dispatch:
    inputs:
      network:
        description: "Target network (base | baseSepolia | sepolia)"
        required: true
        default: "baseSepolia"
      verify:
        description: "Verify on explorer after deploy"
        required: true
        default: "true"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # ‚úÖ –í–ê–ñ–ù–û: —Ç—É—Ç –ù–ï–¢ –∫–ª—é—á–∞ `version`
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Deploy MultiVault
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          RPC_URL_BASE: ${{ secrets.RPC_URL_BASE }}
          RPC_URL_BASE_SEPOLIA: ${{ secrets.RPC_URL_BASE_SEPOLIA }}
          RPC_URL_SEPOLIA: ${{ secrets.RPC_URL_SEPOLIA }}
        run: |
          echo "üöÄ Deploying MultiVault to network: ${{ github.event.inputs.network }}"
          pnpm hardhat run scripts/deploy.ts --network ${{ github.event.inputs.network }}
          echo "---- Deployment file ----"
          cat deployments/${{ github.event.inputs.network }}.json || true

      - name: Verify implementation (if present)
        if: ${{ github.event.inputs.verify == 'true' }}
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          RPC_URL_BASE: ${{ secrets.RPC_URL_BASE }}
          RPC_URL_BASE_SEPOLIA: ${{ secrets.RPC_URL_BASE_SEPOLIA }}
          RPC_URL_SEPOLIA: ${{ secrets.RPC_URL_SEPOLIA }}
        run: |
          if [ -f deployments/${{ github.event.inputs.network }}.json ]; then
            IMPL=$(jq -r '.implementation // empty' deployments/${{ github.event.inputs.network }}.json)
            if [ -n "$IMPL" ]; then
              echo "üßæ Verifying implementation: $IMPL"
              pnpm hardhat verify --network ${{ github.event.inputs.network }} $IMPL
            else
              echo "‚ÑπÔ∏è Implementation not resolved yet. You can rerun verification later."
            fi
          else
            echo "‚ö†Ô∏è deployments file not found."
          fi

      - name: Job summary
        run: |
          echo "‚úÖ Deployment finished. Addresses (if resolved) are in deployments/${{ github.event.inputs.network }}.json"
          echo "To mark the proxy on explorer, use the 'Verify Proxy' UI with the implementation address."
